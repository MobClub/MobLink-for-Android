apply plugin: 'com.android.library'
apply from: 'build-mix.gradle'
apply plugin: 'com.mob.sdk'

android {
    publishNonDefault true
    compileSdkVersion findCompileSdkVersion()
    buildToolsVersion findBuildTools()

    defaultConfig {
        minSdkVersion findMinSdk()
        targetSdkVersion findTargetSdk()
        versionCode findVersionCode()
        versionName findVersionName()
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            assets.srcDirs = ['assets']
            java.srcDirs = ['src']
            aidl.srcDirs = ['src']
            res.srcDirs = ['res']
            jniLibs.srcDirs = ['libs']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            def proguard = findProguardFile()
            if (null != proguard) {
                proguardFiles proguard
            }
        }

        debug {
            minifyEnabled false
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }

    libraryVariants.all { var ->
        if ("release".equals(var.buildType.name)) {
            var.assemble.doLast {
                var.outputs.each { out ->
                    def arrName = "${project.name}-" + findVersionName() + ".aar"
                    File newName = new File(out.outputFile.getParentFile(), arrName)
                    out.outputFile.renameTo(newName)
                }
            }
        }
    }
}

dependencies {
    Project mobTools = findProject(':MobTools')
    String file
    if (null != mobTools) {
        compile mobTools
    } else {
        MobSDK {
            MobTools{}
        }
    }
    mobTools = findProject(":MobCommons")
    if (null != mobTools) {
        compile mobTools
    } else {
        MobSDK {
            MobCommons{}
        }
    }
    File srcDir = new File(projectDir, "src")
    if (!srcDir.isDirectory()) {
        file = findJarByPrefix('MobLink')
        if (null != file) {
            compile files('libs/' + file)
        }
    }
}

